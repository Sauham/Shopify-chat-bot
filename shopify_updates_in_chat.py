# -*- coding: utf-8 -*-
"""Shopify updates in chat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1javfAk46KbsOPBlE_dDolAIdwNWygDnk
"""

!pip install requests

!pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client functions-framework requests

from google.colab import files
uploaded = files.upload()  # Select your `service-account.json` file

import os
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "/content/maximal-symbol-450907-j7-f678451a524c (1).json"

!pip install functions_framework

import functions_framework
import requests
import base64
import json
import os
from googleapiclient.discovery import build
from google.oauth2 import service_account
import base64

# Shopify API credentials
SHOPIFY_API_KEY = os.getenv("2844568efd78e785045ed991a4a6d17b")
SHOPIFY_API_PASSWORD = os.getenv("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")
SHOPIFY_STORE = os.getenv( "qsef9e-xi")
EMAIL_RECIPIENT = os.getenv("sauhamv28@gmail.com")  # Your recipient email
SERVICE_ACCOUNT_FILE = "/content/maximal-symbol-450907-j7-f678451a524c.json"  # Path to your service account file

@functions_framework.http
def send_shopify_report(request):
    """Fetches Shopify data and sends it via email"""

    # Fetch Shopify orders
    shopify_url = f"https://{SHOPIFY_STORE}.myshopify.com/admin/api/2024-01/orders.json?status=any"
    auth = base64.b64encode(f"{SHOPIFY_API_KEY}:{SHOPIFY_API_PASSWORD}".encode()).decode()

    headers = {
        "Authorization": f"Basic {auth}",
        "Content-Type": "application/json"
    }

    response = requests.get(shopify_url, headers=headers)

    if response.status_code != 200:
        return f"Error fetching Shopify data: {response.text}", 500

    data = response.json()
    total_sales = sum(float(order['total_price']) for order in data.get('orders', []))
    total_orders = len(data.get('orders', []))

    # Create email message
    message_text = f"""
    Subject: ðŸš€ Shopify Report

    ðŸ›’ Total Sales MTD: ${total_sales:.2f}
    ðŸ“¦ Total Orders MTD: {total_orders}
    """

    message = {
        'raw': base64.urlsafe_b64encode(message_text.encode()).decode()
    }

    # Send email
    credentials = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=["https://www.googleapis.com/auth/gmail.send"])
    service = build("gmail", "v1", credentials=credentials)
    service.users().messages().send(userId="me", body=message).execute()

    return "Report sent via email!", 200

!pip install schedule

!pip install time

import schedule
import time

# Run the function every day at 9 AM
schedule.every().day.at("00:10").do(send_shopify_report)

while True:
    schedule.run_pending()
    time.sleep(60)  # Wait a minute before checking again